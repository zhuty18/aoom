---
import Cate from "./Cate.astro"
import Tag from "./Tag.astro"
import { processor, date, linkStory } from "../consts"
const { post } = Astro.props
const tags = post.data.tags
if (post.data.ai_comment && !tags.includes("AI评论")) {
  tags.push("AI评论")
}
if (!tags.includes("FIN") && !tags.includes("TBC")) {
  tags.push(post.data.finished ? "FIN" : "TBC")
}
---

<post
  data-finished={post.data.finished || (post.data.ai_source ? true : false)}
  class="post card bg-base-200 hover:bg-base-300/30 shadow-md hover:shadow-lg shadow-base-content/20 w-full mt-3 mb-3 transition-all duration-100"
>
  <div class="card-body">
    <div class="flex justify-between items-center">
      <div class="card-title btn-link btn-ghost link link-primary link-hover">
        <a href={linkStory(post.id)}>{post.data.title}</a>
      </div>
      <div class="flex flex-col items-center">
        <div class="text-neutral mb-1">
          <div class="text-xs text-neutral">
            {
              post.data.tags.includes("AI批评")
                ? "-"
                : `${date(post.data).getFullYear()}.${
                    date(post.data).getMonth() + 1
                  }.${date(post.data).getDate()}`
            }
          </div>
        </div>
        <Cate postId={post.id} />
      </div>
    </div>
    <a
      class="pl-3 pr-3 text-sm/relaxed text-base-content/75 link-hover"
      href={linkStory(post.id)}
    >
      <Fragment
        set:html={await processor.process(
          post.data.excerpt
            ? post.data.excerpt.replaceAll("\\n", "\n")
            : typeof post.body == "string"
              ? post.body.slice(0, 120) + "……"
              : ""
        )}
      />
    </a>
    <div>
      <span class="text-xs text-neutral/80">
        {post.data.word_count ? `${post.data.word_count}字` : "内容由AI创作"}
      </span>
      <span class="flex-1 float-end overflow-auto">
        {
          post.data.tags &&
            post.data.tags.map((tag: string) => <Tag tag={tag} />)
        }
      </span>
    </div>
  </div>
</post>
